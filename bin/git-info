#!/usr/bin/env zsh

git rev-parse --git-dir > /dev/null || exit

__RESET='\033[m'
__GREEN='\033[32m'
__L_GREEN='\033[92m'
__BLUE='\033[34m'
__YELLOW='\033[33m'
__WHITE='\033[37m'
__RED='\033[31m'
__L_RED='\033[91m'
__UNDERLINE='\033[4m'
__BOLD='\033[1m'
__MILD='\033[2m'
__BACKGROUND='\033[7m'

__RESULT=""

__RESULT="${__RESULT}${__BACKGROUND}Origins${__RESET}\n"
for remote in `git remote -v | awk '{print $1}' | uniq`; do
    ([[ -z $__MAIN_REMOTE ]] || [[ $remote == 'origin' ]]) && __MAIN_REMOTE=$remote
  __RESULT="${__RESULT}  ${__UNDERLINE}${__BOLD}${__GREEN}${remote}${__RESET}\n"
  __RESULT="${__RESULT}`git remote -v | grep "^${remote}" | awk '{print "    "$3";"$2}' | column -s';' -t`\n"
done

 __RESULT="${__RESULT}\n${__BACKGROUND}Branches${__RESET}\n"
for branch in `\git branch -v -a --sort=-committerdate | awk "/${__MAIN_REMOTE}/"'{print $1}' | sed "s|remotes/${__MAIN_REMOTE}/||g" | grep -v "HEAD"`; do
  if [[ `git shortlog -s -n --after="$(date -v-3m +%F)" "${__MAIN_REMOTE}/${branch}"` == "" ]]; then
    state="${__YELLOW}inactive${__RESET}"
  else
    state="${__GREEN}active${__RESET}"
  fi
  __dirty=$(git rev-list --left-right --count "${branch}"..."${__MAIN_REMOTE}/${branch}" 2>/dev/null | awk '{printf("%s%s", $1,$2)}')
  __RESULT="${__RESULT}  ${__UNDERLINE}${__BOLD}${__RED}${branch}${__RESET}(${state})${__RED}$([[ $__dirty == "" ]] || [[ $__dirty == "00" ]] || echo " *")${__RESET}"
  if [[ `git branch -r | grep -c "${__MAIN_REMOTE}/HEAD"` != 0 ]]; then 
    __RESULT="${__RESULT} ${__BOLD}${__WHITE}`git rev-list --left-right --count ${__MAIN_REMOTE}/HEAD...${__MAIN_REMOTE}/${branch} | awk '{print $1"|"$2}'`${__RESET}"
  elif [[ `git branch -r | grep -c "${__MAIN_REMOTE}/master"` != 0 ]]; then 
    __RESULT="${__RESULT} ${__BOLD}${__WHITE}`git rev-list --left-right --count ${__MAIN_REMOTE}/master...${__MAIN_REMOTE}/${branch} | awk '{print $1"|"$2}'`${__RESET}"
  fi
  __RESULT="${__RESULT} ( C:${__BOLD}${__WHITE}`git log --oneline \"${__MAIN_REMOTE}/${branch}\" | awk '{c+=1} END {print c}'`${__RESET}"
  __RESULT="${__RESULT} A:${__BOLD}${__WHITE}`git shortlog -s -n -e \"${__MAIN_REMOTE}/${branch}\" | awk '{c+=1} END {print c}'`${__RESET} )"
  __RESULT="${__RESULT}\n  last change: `git log --pretty=format:'%C(bold green)%s%C(reset) %C(blue)%cr%C(reset) by %C(yellow)%an%C(reset)' -1 \"${__MAIN_REMOTE}/${branch}\"`\n"
  __RESULT="${__RESULT}  last 7 days: `git shortlog -sn --after="$(date -v-8d +%F) 23:59:59" "${__MAIN_REMOTE}/${branch}" | awk "{c=\\$1};\\$1=\\"\\";{printf(\\"${__YELLOW}%s${__RESET} (${__GREEN}%s${__RESET})\\",\\$0,c)}"`\n"
done

if [[ `git tag | grep -c '^' 2>/dev/null` != 0 ]]; then
  __RESULT="${__RESULT}\n${__BACKGROUND}Tags${__RESET}\n"
  __RESULT=${__RESULT}$(git tag -n --sort=-creatordate | awk "{printf(\"  ${__RED}${__BOLD}${__UNDERLINE}%s${__RESET};;\",\$1)}; \$1=\"\"; {printf(\"${__BLUE}%s${__RESET}\n\",\$0)}" | column -s';;' -t)
fi

echo ${__RESULT}

unset __RESET __UNDERLINE __BOLD __MILD __BACKGROUND __RED __GREEN __YELLOW __BLUE __WHITE remote branch __MAIN_REMOTE state __RESULT __dirty
