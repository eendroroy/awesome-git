#!/usr/bin/env zsh

__RESET='\033[m'
__GREEN='\033[32m'
__BLUE='\033[34m'
__YELLOW='\033[33m'
__WHITE='\033[37m'
__RED='\033[31m'
__UNDERLINE='\033[4m'
__BOLD='\033[1m'
__MILD='\033[2m'
__BACKGROUND='\033[7m'

echo "${__BACKGROUND}Origins${__RESET}"
for remote in `git remote -v | awk '{print $1}' | uniq`; do
    ([[ -z $__MAIN_REMOTE ]] || [[ $remote == 'origin' ]]) && __MAIN_REMOTE=$remote
  echo "  ${__GREEN}${__UNDERLINE}${__BOLD}${remote}${__RESET}"
  git remote -v | grep "^${remote}" | awk '{print "    "$3";"$2}' | column -s';' -t
done

echo "\n${__BACKGROUND}Branches${__RESET}"
for branch in `\git branch -v -a | awk "/${__MAIN_REMOTE}/"'{print $1}' | sed "s|remotes/${__MAIN_REMOTE}/||g"`; do
  echo -n "  ${__UNDERLINE}${__BOLD}${__RED}${branch}${__RESET}"
  echo -n "( commits: ${__BOLD}${__WHITE}`git log --oneline \"${__MAIN_REMOTE}/${branch}\" | awk '{c+=1} END {print c}'`${__RESET})"
  echo -n " | authors: ${__BOLD}${__WHITE}`git shortlog -s -n -e \"${__MAIN_REMOTE}/${branch}\" | awk '{c+=1} END {print c}'`${__RESET})"
  echo "\n  last change: `git log --no-merges --pretty=format:'%C(bold green)%s%C(reset) %C(blue)%cr%C(reset) by %C(yellow)%an%C(reset)' -1 \"${__MAIN_REMOTE}/${branch}\"`\n"
done

unset __RESET __UNDERLINE __BOLD __MILD __BACKGROUND __RED __GREEN __YELLOW __BLUE __WHITE remote branch __MAIN_REMOTE
